I replaced everything that's not a main loop enclosure with 0. 
I then replaced main enclosure with easier to see symbols.

Working everything out manually is boring. Yet I am tempted to do so.

The main problem is that it's hard to highlight the parts that's inside the main enclosure. 
Things right outside the encloure looks like it might be inside the enclosure. 

So how do we highlight or denote areas that are inside main enclosure?

Here is the thing:

└S┐

Either top of S OR bottom of S is inside or outside the enclosure. It cannot be both. 
I'm not sure how to mathematically prove this, but that's my hypothesis. It CANNOT be both. 

We already have 0's on edges that we know are outside the loop. 

We can try both approaches out and test it using these 0's - then it will make clear which one is outside and inside. 

Now, how to do this? Let's say that we assume the upper part of S is enclosed. 
Then with S┐, we can mark ┐ as signifying left. Meaning, the left is enclosed. We go step by step marking left, right, up, bottom.

We can then test the outer 0's. If the outer 0 is next to a block that signifies "right", then our choice is wrong and the other is right.
Vice versa.

To signify these directions, we can use cardinal directions. NSEW will signify such. 

| will be E/W. | will be N/S. 

For 90 degree bends, we can just use the original mapping of the challenge.

My hypothesis will be following S┐ and assuming the right of ┐ is enclosed. We can code this therefore.